##Logit
logit<-glm(yesno~.,data = train,family = 'binomial')
predicted<-predict(logit,test,type = "response")
predicted<-ifelse(predicted>0.5,"y","n")
confusionMatrix(factor(predicted),test$yesno,positive = "y")
R1<-ifelse(predicted=="y",1,0)
R2<-ifelse(test$yesno=="y",1,0)
rrr1<-roc(R2,R1)
g1<-ggroc(rrr1,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model Logistic")
##KNN
data("spam7")
spam7$crl.tot<-scale(spam7$crl.tot)
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
crtl<-trainControl(method = "cv",number = 5)
knn_c<-train(yesno~.,data=train,trControl=crtl,tuneLength=5)
plot(knn_c)
knn1<-knn(train = train[,-7],test = test[,-7],cl = train$yesno,k=3)
confusionMatrix(knn1,test$yesno,positive = "y")
R11<-ifelse(knn1=="y",1,0)
R22<-ifelse(test$yesno=="y",1,0)
rrr2<-roc(R22,R11)
g2<-ggroc(rrr2,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model KNN")
?roc
grid.arrange(g1,g1)
confusionMatrix(knn1,test$yesno,positive = "y")
confusionMatrix(knn1,test$yesno,positive = "y")
Pyes<-((431+75)/(761+112+75+431))*((431+112)/(761+112+75+431))
Pno<-((761+112)/(761+112+75+431))*((761+ 75)/(761+112+75+431))
Pyes
Pe<-Pye+Pno
Pe<-Pyes+Pno
kappa<-(p0-Pe)/(1-Pe)
kappa<-(pO-Pe)/(1-Pe)
Po<-(761+431)/(761+112+75+431)
kappa<-(Po-Pe)/(1-Pe)
kappa
confusionMatrix(knn1,test$yesno,positive = "y")
Po<-(761+431)/(761+112+75+431)
Pno<-((761+112)/(761+112+75+431))*((761+ 75)/(761+112+75+431))
kappa<-(Po-Pe)/(1-Pe)
kappa
library(ggplot2)
library(gridExtra)
library(ggcorrplot)
library(DAAG)
library(caret)
library(pROC)
library(class)
library(BBmisc)
data("spam7")
addmargins(table(spam7$yesno))
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
##Logit
logit<-glm(yesno~.,data = train,family = 'binomial')
predicted<-predict(logit,test,type = "response")
predicted<-ifelse(predicted>0.5,"y","n")
confusionMatrix(factor(predicted),test$yesno,positive = "y")
R1<-ifelse(predicted=="y",1,0)
R2<-ifelse(test$yesno=="y",1,0)
rrr1<-roc(R2,R1)
g1<-ggroc(rrr1,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model Logistic")
##KNN
data("spam7")
spam7$crl.tot<-scale(spam7$crl.tot)
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
crtl<-trainControl(method = "cv",number = 5)
knn_c<-train(yesno~.,data=train,trControl=crtl,tuneLength=5)
plot(knn_c)
knn1<-knn(train = train[,-7],test = test[,-7],cl = train$yesno,k=3)
confusionMatrix(knn1,test$yesno,positive = "y")
R11<-ifelse(knn1=="y",1,0)
R22<-ifelse(test$yesno=="y",1,0)
rrr2<-roc(R22,R11)
g2<-ggroc(rrr2,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model KNN")
grid.arrange(g1,g1)
set.seed(42)
set.seed(42)
library(Metrics)
data("spam7")
index<-sample(nrow(spam7),nrow(spam7)*.8,replace = F)
train<-spam7[index,]
test<-spam7[-index,]
OLS<-lm(crl.tot~.,data = train)
summary(OLS)# Rsquared 0.08774
OLS_PRED<-predict(OLS,test)
RMSE(pred =OLS_PRED,obs = test$crl.tot)#744.7224
rmse(pred =OLS_PRED,obs = test$crl.tot)#744.7224
rmse(pred =OLS_PRED,obs = test$crl.tot)#744.7224
OLS_PRED<-predict(OLS,test)
RMSE(pred =OLS_PRED,obs = test$crl.tot)#744.7224
Metrics::RMSE(pred =OLS_PRED,obs = test$crl.tot)#744.7224
Metrics::rmse(pred =OLS_PRED,obs = test$crl.tot)#744.7224
Metrics::rmse(pred =OLS_PRED,test$crl.tot)#744.7224
rmse(pred =OLS_PRED,test$crl.tot)#744.7224
OLS<-lm(crl.tot~.,data = train)
summary(OLS)# Rsquared 0.08774
OLS_PRED<-predict(OLS,test)
rmse(actual = test$crl.tot,predicted = OLS_PRED)#744.7224
library(ggplot2)
library(gridExtra)
library(ggcorrplot)
library(DAAG)
library(caret)
library(pROC)
library(class)
library(BBmisc)
data("spam7")
addmargins(table(spam7$yesno))
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
##Logit
logit<-glm(yesno~.,data = train,family = 'binomial')
predicted<-predict(logit,test,type = "response")
predicted<-ifelse(predicted>0.5,"y","n")
confusionMatrix(factor(predicted),test$yesno,positive = "y")
R1<-ifelse(predicted=="y",1,0)
R2<-ifelse(test$yesno=="y",1,0)
rrr1<-roc(R2,R1)
g1<-ggroc(rrr1,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model Logistic")
##KNN
data("spam7")
spam7$crl.tot<-scale(spam7$crl.tot)
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
crtl<-trainControl(method = "cv",number = 5)
knn_c<-train(yesno~.,data=train,trControl=crtl,tuneLength=5)
plot(knn_c)
knn1<-knn(train = train[,-7],test = test[,-7],cl = train$yesno,k=3)
confusionMatrix(knn1,test$yesno,positive = "y")
R11<-ifelse(knn1=="y",1,0)
R22<-ifelse(test$yesno=="y",1,0)
rrr2<-roc(R22,R11)
g2<-ggroc(rrr2,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model KNN")
grid.arrange(g1,g1)
set.seed(42)
library(Metrics)
data("spam7")
index<-sample(nrow(spam7),nrow(spam7)*.8,replace = F)
index<-sample(nrow(spam7),nrow(spam7)*.8,replace = F)
train<-spam7[index,]
test<-spam7[-index,]
OLS<-lm(crl.tot~.,data = train)
summary(OLS)# Rsquared 0.08774
OLS_PRED<-predict(OLS,test)
rmse(actual = test$crl.tot,predicted = OLS_PRED)#744.7224
library(ggplot2)
library(gridExtra)
library(ggcorrplot)
library(DAAG)
library(caret)
library(pROC)
library(class)
library(BBmisc)
data("spam7")
addmargins(table(spam7$yesno))
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
##Logit
logit<-glm(yesno~.,data = train,family = 'binomial')
predicted<-predict(logit,test,type = "response")
predicted<-ifelse(predicted>0.5,"y","n")
confusionMatrix(factor(predicted),test$yesno,positive = "y")
R1<-ifelse(predicted=="y",1,0)
R2<-ifelse(test$yesno=="y",1,0)
rrr1<-roc(R2,R1)
g1<-ggroc(rrr1,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model Logistic")
##KNN
data("spam7")
spam7$crl.tot<-scale(spam7$crl.tot)
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
crtl<-trainControl(method = "cv",number = 5)
knn_c<-train(yesno~.,data=train,trControl=crtl,tuneLength=5)
plot(knn_c)
knn1<-knn(train = train[,-7],test = test[,-7],cl = train$yesno,k=3)
confusionMatrix(knn1,test$yesno,positive = "y")
R11<-ifelse(knn1=="y",1,0)
R22<-ifelse(test$yesno=="y",1,0)
rrr2<-roc(R22,R11)
g2<-ggroc(rrr2,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model KNN")
grid.arrange(g1,g1)
library(ggplot2)
library(gridExtra)
library(ggcorrplot)
library(DAAG)
library(caret)
library(pROC)
library(class)
library(BBmisc)
data("spam7")
addmargins(table(spam7$yesno))
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
##Logit
logit<-glm(yesno~.,data = train,family = 'binomial')
predicted<-predict(logit,test,type = "response")
predicted<-ifelse(predicted>0.5,"y","n")
confusionMatrix(factor(predicted),test$yesno,positive = "y")
R1<-ifelse(predicted=="y",1,0)
R2<-ifelse(test$yesno=="y",1,0)
rrr1<-roc(R2,R1)
g1<-ggroc(rrr1,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model Logistic")
##KNN
data("spam7")
spam7$crl.tot<-scale(spam7$crl.tot)
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
crtl<-trainControl(method = "cv",number = 5)
library(Metrics)
data("spam7")
set.seed(42)
index<-sample(nrow(spam7),nrow(spam7)*.8,replace = F)
train<-spam7[index,]
test<-spam7[-index,]
OLS<-lm(crl.tot~.,data = train)
summary(OLS)# Rsquared 0.08774
OLS_PRED<-predict(OLS,test)
rmse(actual = test$crl.tot,predicted = OLS_PRED)#531.2555
grid<-expand.grid(k=5:10)
set.seed(1)
model<-train(
crl.tot~.,data=train,method='knn',
trControl=trainControl("cv",number = 4),
preProcess=c("center","scale"),
tuneGrid=grid
)
model
model<-train(
crl.tot~.,data=train,method='knn',
trControl=trainControl("cv",number = 4),
preProcess=c("center","scale"),
tuneGrid=grid
)
model
library(Metrics)
data("spam7")
set.seed(42)
index<-sample(nrow(spam7),nrow(spam7)*.8,replace = F)
train<-spam7[index,]
test<-spam7[-index,]
OLS<-lm(crl.tot~.,data = train)
summary(OLS)# Rsquared 0.08774
OLS_PRED<-predict(OLS,test)
rmse(actual = test$crl.tot,predicted = OLS_PRED)#531.2555
grid<-expand.grid(k=5:10)
set.seed(1)
model<-train(
crl.tot~.,data=train,method='knn',
trControl=trainControl("cv",number = 4),
preProcess=c("center","scale"),
tuneGrid=grid
)
model
library(ggplot2)
library(gridExtra)
library(ggcorrplot)
library(DAAG)
library(caret)
library(pROC)
library(class)
library(BBmisc)
data("spam7")
addmargins(table(spam7$yesno))
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
##Logit
logit<-glm(yesno~.,data = train,family = 'binomial')
predicted<-predict(logit,test,type = "response")
predicted<-ifelse(predicted>0.5,"y","n")
confusionMatrix(factor(predicted),test$yesno,positive = "y")
R1<-ifelse(predicted=="y",1,0)
R2<-ifelse(test$yesno=="y",1,0)
rrr1<-roc(R2,R1)
g1<-ggroc(rrr1,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model Logistic")
##KNN
data("spam7")
spam7$crl.tot<-scale(spam7$crl.tot)
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
crtl<-trainControl(method = "cv",number = 5)
knn_c<-train(yesno~.,data=train,trControl=crtl,tuneLength=5)
plot(knn_c)
knn1<-knn(train = train[,-7],test = test[,-7],cl = train$yesno,k=3)
confusionMatrix(knn1,test$yesno,positive = "y")
R11<-ifelse(knn1=="y",1,0)
R22<-ifelse(test$yesno=="y",1,0)
rrr2<-roc(R22,R11)
g2<-ggroc(rrr2,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model KNN")
grid.arrange(g1,g1)
library(Metrics)
data("spam7")
set.seed(42)
index<-sample(nrow(spam7),nrow(spam7)*.8,replace = F)
train<-spam7[index,]
test<-spam7[-index,]
OLS<-lm(crl.tot~.,data = train)
summary(OLS)# Rsquared 0.08774
OLS_PRED<-predict(OLS,test)
rmse(actual = test$crl.tot,predicted = OLS_PRED)#531.2555
grid<-expand.grid(k=5:10)
set.seed(1)
model<-train(
crl.tot~.,data=train,method='knn',
trControl=trainControl("cv",number = 4),
preProcess=c("center","scale"),
tuneGrid=grid
)
model
head(train)
library(ggplot2)
library(gridExtra)
library(ggcorrplot)
library(DAAG)
library(caret)
library(pROC)
library(class)
library(BBmisc)
data("spam7")
addmargins(table(spam7$yesno))
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
##Logit
logit<-glm(yesno~.,data = train,family = 'binomial')
predicted<-predict(logit,test,type = "response")
predicted<-ifelse(predicted>0.5,"y","n")
confusionMatrix(factor(predicted),test$yesno,positive = "y")
R1<-ifelse(predicted=="y",1,0)
R2<-ifelse(test$yesno=="y",1,0)
rrr1<-roc(R2,R1)
g1<-ggroc(rrr1,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model Logistic")
##KNN
data("spam7")
spam7$crl.tot<-scale(spam7$crl.tot)
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
crtl<-trainControl(method = "cv",number = 5)
knn_c<-train(yesno~.,data=train,trControl=crtl,tuneLength=5)
plot(knn_c)
knn1<-knn(train = train[,-7],test = test[,-7],cl = train$yesno,k=3)
confusionMatrix(knn1,test$yesno,positive = "y")
R11<-ifelse(knn1=="y",1,0)
R22<-ifelse(test$yesno=="y",1,0)
rrr2<-roc(R22,R11)
g2<-ggroc(rrr2,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model KNN")
grid.arrange(g1,g1)
library(Metrics)
data("spam7")
set.seed(42)
spam7$yesno<-ifelse(spam7$yesno=="y","n")
library(Metrics)
data("spam7")
set.seed(42)
spam7$yesno<-ifelse(spam7$yesno=="y",1,0)
index<-sample(nrow(spam7),nrow(spam7)*.8,replace = F)
train<-spam7[index,]
test<-spam7[-index,]
OLS<-lm(crl.tot~.,data = train)
summary(OLS)# Rsquared 0.08774
OLS_PRED<-predict(OLS,test)
rmse(actual = test$crl.tot,predicted = OLS_PRED)#531.2555
head(train)
grid<-expand.grid(k=5:10)
set.seed(42)
model<-train(
crl.tot~.,data=train,method='knn',
trControl=trainControl("cv",number = 4),
preProcess=c("center","scale"),
tuneGrid=grid
)
model
confusionMatrix(knn1,test$yesno,positive = 1)
confusionMatrix(knn1,test$yesno,positive = "1")
library(ggplot2)
library(gridExtra)
library(ggcorrplot)
library(DAAG)
library(caret)
library(pROC)
library(class)
library(BBmisc)
data("spam7")
addmargins(table(spam7$yesno))
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
##Logit
logit<-glm(yesno~.,data = train,family = 'binomial')
predicted<-predict(logit,test,type = "response")
predicted<-ifelse(predicted>0.5,"y","n")
confusionMatrix(factor(predicted),test$yesno,positive = "y")
R1<-ifelse(predicted=="y",1,0)
R2<-ifelse(test$yesno=="y",1,0)
rrr1<-roc(R2,R1)
g1<-ggroc(rrr1,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model Logistic")
##KNN
data("spam7")
spam7$crl.tot<-scale(spam7$crl.tot)
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
crtl<-trainControl(method = "cv",number = 5)
knn_c<-train(yesno~.,data=train,trControl=crtl,tuneLength=5)
plot(knn_c)
knn1<-knn(train = train[,-7],test = test[,-7],cl = train$yesno,k=3)
conf<-confusionMatrix(knn1,test$yesno,positive = "y")
R11<-ifelse(knn1=="y",1,0)
R22<-ifelse(test$yesno=="y",1,0)
rrr2<-roc(R22,R11)
g2<-ggroc(rrr2,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model KNN")
grid.arrange(g1,g1)
library(Metrics)
data("spam7")
set.seed(42)
spam7$yesno<-ifelse(spam7$yesno=="y",1,0)
index<-sample(nrow(spam7),nrow(spam7)*.8,replace = F)
train<-spam7[index,]
test<-spam7[-index,]
OLS<-lm(crl.tot~.,data = train)
summary(OLS)# Rsquared 0.08774
OLS_PRED<-predict(OLS,test)
rmse(actual = test$crl.tot,predicted = OLS_PRED)#531.2555
head(train)
grid<-expand.grid(k=5:10)
set.seed(42)
model<-train(
crl.tot~.,data=train,method='knn',
trControl=trainControl("cv",number = 4),
preProcess=c("center","scale"),
tuneGrid=grid
)
model
model
conf
conf
Po<-(767+429)/(767+114+69+429)
Pyes<-((429+69 )/(767+114+69+429))*((429+114)/(767+114+69+429))
Pno<-((767+114)/(767+114+69+429))*((767+ 69)/(767+114+69+429))
Pe<-Pyes+Pno
kappa<-(Po-Pe)/(1-Pe)
kappa
library(ggplot2)
library(gridExtra)
library(DAAG)
library(caret)
library(pROC)
library(class)
library(BBmisc)
data("spam7")
addmargins(table(spam7$yesno))
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.7,list = F)
train<-spam7[train_index,]
test<-spam7[-train_index,]
##Logit
logit<-glm(yesno~.,data = train,family = 'binomial')
predicted<-predict(logit,test,type = "response")
predicted<-ifelse(predicted>0.5,"y","n")
confusionMatrix(factor(predicted),test$yesno,positive = "y")
R1<-ifelse(predicted=="y",1,0)
R2<-ifelse(test$yesno=="y",1,0)
rrr1<-roc(R2,R1)
g1<-ggroc(rrr1,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve for Model Logistic")
P_test<-prediction(pred,Test$yesno)
perf<-performance(P_test,'tpr','fpr')
P_test<-prediction(predicted,Test$yesno)
library(ROCR)
P_test<-prediction(predicted,Test$yesno)
P_test<-prediction(predicted,test$yesno)
predicted
predicted<-predict(logit,test,type = "response")
predicted
P_test<-prediction(predicted,test$yesno)
perf<-performance(P_test,'tpr','fpr')
plot(perf,colorize=T)
performance(P_test,'auc')@y.values
FPR<-unlist(perf@x.values)
TPR<-unlist(perf@y.values)
alpha=unlist(perf@alpha.values)
df<-data.frame(FPR,TPR,alpha)
ggplot(df,aes(x=FPR,y=TPR,color=alpha)) + geom_line()+
theme_bw()+ labs(x="False Positive Rate",y="True Positive Rate",title="Roc Curve",color="Cutoff Values")
